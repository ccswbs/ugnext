fragment Accordion on ParagraphAccordionSection {
  __typename
  headingLevel
  accordionSectionTitle: title
  items {
    ... on ParagraphAccordionBlock {
      headingLevel
      accordionTitle: title
      text {
        processed
      }
    }
  }
  sectionColumn {
    ...SectionColumn
  }
}

fragment ButtonSection on ParagraphSectionButton {
  __typename
  buttons {
    ...Buttons
  }
  sectionColumn {
    ...SectionColumn
  }
}

fragment Buttons on ParagraphButtonWidget {
  __typename
  ctaHeading {
    processed
  }
  fontAwesomeIcon
  formattedTitle {
    processed
  }
  link {
    title
    url
  }
  fontAwesomeIconColour {
    ... on TermColourVariable {
      name
    }
  }
  style {
    ... on TermButtonStyle {
      name
    }
  }
}

fragment GeneralText on ParagraphGeneralText {
  __typename
  sectionColumn {
    ...SectionColumn
  }
  body {
    processed
  }
}

fragment Image on MediaImage {
  __typename
  image {
    alt
    height
    width
    url
  }
}

fragment ImageOverlay on ParagraphImageOverlay {
  __typename
  backgroundImage {
    ...Image
  }
  imageOverlayContent: content {
    ...GeneralText
    ...ButtonSection
    ...StoryQuote
    ...StoryModalVideo
  }
  imageOverlayStyle: style {
    ... on TermImageOverlayStyle {
      name
    }
  }
}

fragment Links on ParagraphLinksWidget {
  __typename
  links {
    ... on ParagraphLinkItem {
      url {
        title
        url
      }
      image {
        ...Image
      }
      description
    }
  }
}

fragment MediaText on ParagraphMediaText {
  __typename
  heading: title
  mediaImageSize
  buttonSection {
    ...ButtonSection
  }
  media {
    __typename
    ...Image
    ...RemoteVideo
    ...Video
  }
  mediaAlignment
  mediaImageSize
  sectionColumn {
    ...SectionColumn
  }
  headingLevel
  description {
    processed
  }
  background {
    ... on TermBgColor {
      name
    }
  }
}

fragment ModalVideo on ParagraphModalVideoWidget {
  __typename
  video {
    ...RemoteVideo
  }
}

fragment Navigation on TermPrimaryNavigation {
  menuName
}

fragment RemoteVideo on MediaRemoteVideo {
  __typename
  height
  width
  url
  name
  cc {
    url
    name
  }
  transcript {
    name
    url
  }
}

fragment Section on ParagraphSection {
  __typename
  heading: title
  headingLevel
  content {
    __typename
    ...Accordion
    ...GeneralText
    ...Buttons
    ...Links
    ...MediaText
    ...ButtonSection
    ...Tabs
    ...Statistics
  }
}

fragment SectionColumn on TermSectionColumn {
  name
}

fragment Statistics on ParagraphStatisticWidget {
  __typename
  content {
    ... on ParagraphStatisticItem {
      image {
        ...Image
      }
      fontAwesomeIcon
      represents {
        processed
      }
      value
    }
  }
  style {
    ... on TermStatisticStyle {
      name
    }
  }
}

fragment Story on ParagraphStoryWidget {
  __typename
  content {
    ...Statistics
    ... on ParagraphStoryImageCutoutBackground {
      backgroundImage {
        ...Image
      }
      foregroundImage {
        ...Image
      }
      title
      text {
        processed
      }
      storyContent: content {
        ...StoryModalVideo
        ...StoryQuote
      }
    }
  }
}

fragment StoryModalVideo on ParagraphStoryModalVideo {
  __typename
  title {
    processed
  }
  video {
    ...RemoteVideo
  }
}

fragment StoryQuote on ParagraphStoryQuote {
  __typename
  quoteContent: content
  quoteSource: source
  quoteDescription: description
  image {
    ...Image
  }
}

fragment Tabs on ParagraphSectionTab {
  __typename
  tabs {
    ... on ParagraphTabContent {
      body {
        processed
      }
      title
    }
  }
  sectionColumn {
    ...SectionColumn
  }
}

fragment Tag on TermTag {
  name
}

fragment Testimonial on NodeTestimonial {
  __typename
  body {
    processed
    summary
  }
  profile {
    url
    title
  }
  type {
    ... on TermTestimonialType {
      name
    }
  }
  title
}

fragment TestimonialSlider on ParagraphTestimonialSlider {
  __typename
  title
  byTitle {
    ...Testimonial
  }
  byTags {
    ...Tag
  }
}

fragment Video on MediaVideo {
  __typename
  video {
    name
    url
    mime
  }
}

query GetPage($id: String = "", $status: Boolean = false) {
	contentRevisions(filter: { id: $id, status: $status, type: "page" }, pageSize: 1) {
		results {
			... on NodePage {
				primaryNavigation {
					...Navigation
				}
				image {
					...Image
				}
				title
				widgets {
					...Accordion
					...GeneralText
					...Buttons
					...Links
					...MediaText
					...ButtonSection
					...Tabs
					...Statistics
					...TestimonialSlider
					...Story
					...ImageOverlay
					...ModalVideo
					...Section
				}
				changed {
					timestamp
				}
			}
		}
	}
}
