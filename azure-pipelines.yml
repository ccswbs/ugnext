trigger:
  - main

pr: none

variables:
  - group: ugnext

pool:
  vmImage: ubuntu-latest

steps:
  - task: Npm@1
    inputs:
      command: "custom"
      customCommand: "install -g bun"
      verbose: true
    displayName: "Install bun using npm"

  - script: |
      bun bun.lockb > bun.lockb.txt
    displayName: "Output text version of bun.lockb"

  - script: |
      bun install --frozen-lockfile
    displayName: "Install dependencies using bun"

  - task: DeleteFiles@1
    inputs:
      contents: "pages/**/!(404.js|500.js|_app.js|_document.js|index.js|ens-test.js)"
    displayName: "Remove all pages except home, template and error pages"

  - task: Cache@2
    inputs:
      key: "next | $(Agent.OS) | bun.lockb.txt"
      path: "$(System.DefaultWorkingDirectory)/.next/cache"
    displayName: "Cache .next/cache"

  - script: |
      bun run static-build
    displayName: "Build site"

  - bash: |
      # Define absolute paths
      source_dir="$(Build.SourcesDirectory)/out/_next"
      target_dir="$(Build.SourcesDirectory)/out/_home-assets"

      if [ -d "$source_dir" ]; then
        # Move contents of _next to _home-assets/_next
        mkdir -p "$target_dir"
        mv -v "$source_dir" "$target_dir"

        # Update links in all .html and .json files under public directory
        find "$(Build.SourcesDirectory)/_next" -type f \( -name "*.html" -o -name "*.json" \) -exec sed -i 's|/_next|/_home-assets/_next|g' {} +
      fi

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: "out"
      includeRootFolder: false
      archiveType: "zip"
      archiveFile: "$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip"
      replaceExistingArchive: true
    displayName: "Archive output folder"

  - publish: "$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip"
    artifact: zipOutput
    displayName: "Publish Artifact"
